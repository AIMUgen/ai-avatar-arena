#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

# GitHub username and repository name
GITHUB_USERNAME="AIMUgen"
REPO_NAME="ai-avatar-arena"
REPO_DESCRIPTION="AI Avatar Arena Simulation project generated by AI."

# Check if the GITHUB_TOKEN environment variable is set
if [ -z "$GITHUB_TOKEN" ]; then
  echo "Error: GITHUB_TOKEN environment variable is not set."
  echo "Please set your GitHub Personal Access Token in the GITHUB_TOKEN environment variable."
  exit 1
fi


echo "Checking for git..."
if ! command -v git &> /dev/null
then
    echo "git command could not be found. Please install git."
    exit 1
fi
echo "Git found."

# Initialize git repository if it doesn't exist
if [ ! -d ".git" ]; then
  echo "Initializing git repository..."
  git init -b main
else
  echo "Git repository already exists."
  # Ensure the default branch is 'main'
  CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
  if [ "$CURRENT_BRANCH" != "main" ]; then
    echo "Switching to main branch..."
    git checkout -b main || git checkout main
  fi
fi

# Add all files
echo "Adding all files to git..."
git add .

# Check if there are changes to commit
if git diff-index --quiet HEAD --; then
  echo "No changes to commit."
else
  echo "Committing changes..."
  # Configure git user if not set (useful in some CI/CD environments)
  git config user.name "AI Bot" || true
  git config user.email "ai-bot@example.com" || true
  git commit -m "Initial commit of AI Avatar Arena"
fi


# Check if GitHub CLI 'gh' is installed
if command -v gh &> /dev/null
then
    echo "GitHub CLI found. Using gh to create repository..."
    # Authenticate gh with the token from the environment variable
    echo $GITHUB_TOKEN | gh auth login --with-token

    # Check if repo exists
    if gh repo view "$GITHUB_USERNAME/$REPO_NAME" &> /dev/null; then
        echo "Repository $GITHUB_USERNAME/$REPO_NAME already exists on GitHub."
    else
        echo "Creating GitHub repository $GITHUB_USERNAME/$REPO_NAME..."
        gh repo create "$GITHUB_USERNAME/$REPO_NAME" --public --description "$REPO_DESCRIPTION"
        echo "Repository created successfully."
    fi

    # Check if remote 'origin' exists
    if git remote get-url origin &> /dev/null; then
        echo "Remote 'origin' already exists. Updating URL..."
        git remote set-url origin "https://github.com/$GITHUB_USERNAME/$REPO_NAME.git"
    else
        echo "Adding remote 'origin'..."
        git remote add origin "https://github.com/$GITHUB_USERNAME/$REPO_NAME.git"
    fi

    echo "Pushing code to GitHub repository..."
    # Use gh auth setup-git to configure credential helper
    gh auth setup-git
    git push -u origin main

else
    echo "GitHub CLI (gh) not found. Trying with curl..."
    # Check if curl is installed
    if ! command -v curl &> /dev/null
    then
        echo "curl command could not be found. Cannot create repository automatically."
        echo "Please install GitHub CLI (gh) or curl."
        exit 1
    fi

    # Check if repo exists using GitHub API
    # Use the token from the environment variable
    HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
        -H "Authorization: Bearer $GITHUB_TOKEN" \
        "https://api.github.com/repos/$GITHUB_USERNAME/$REPO_NAME")

    if [ "$HTTP_STATUS" -eq 200 ]; then
        echo "Repository $GITHUB_USERNAME/$REPO_NAME already exists on GitHub."
    elif [ "$HTTP_STATUS" -eq 404 ]; then
        # Use the token from the environment variable
        echo "Creating GitHub repository $GITHUB_USERNAME/$REPO_NAME using curl..."
        CREATE_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/user/repos \
          -d "{\"name\":\"$REPO_NAME\",\"description\":\"$REPO_DESCRIPTION\",\"private\":false}")
        if [ "$CREATE_STATUS" -eq 201 ]; then
            echo "Repository created successfully via API."
        else
            echo "Failed to create repository via API. Status code: $CREATE_STATUS"
            echo "Please check your token permissions or create the repository manually."
            exit 1
        fi
    else
        echo "Error checking repository status via API. Status code: $HTTP_STATUS"
        echo "Please check your token or network connection."
        exit 1
    fi

    # Use the token from the environment variable
    # Configure remote URL with token (less secure, but works with curl)
    REMOTE_URL="https://x-access-token:$GITHUB_TOKEN@github.com/$GITHUB_USERNAME/$REPO_NAME.git"

    # Check if remote 'origin' exists
    if git remote get-url origin &> /dev/null; then
        echo "Remote 'origin' already exists. Updating URL..."
        git remote set-url origin "$REMOTE_URL"
    else
        echo "Adding remote 'origin'..."
        git remote add origin "$REMOTE_URL"
    fi

    echo "Pushing code to GitHub repository..."
    git push -u origin main
fi

echo "Repository setup complete. Code pushed to https://github.com/$GITHUB_USERNAME/$REPO_NAME"
